"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[724],{5765:(t,e,r)=>{r.d(e,{cn:()=>c});var o=r(52596),a=r(39688);function c(){for(var t=arguments.length,e=Array(t),r=0;r<t;r++)e[r]=arguments[r];return(0,a.QP)((0,o.$)(e))}},41658:(t,e,r)=>{r.d(e,{DP:()=>u,NP:()=>s});var o=r(95155),a=r(12115),c=r(51362);function n(t,e,r){let o,a,c;t/=360,r/=100;let n=(t,e,r)=>(r<0&&(r+=1),r>1&&(r-=1),r<1/6)?t+(e-t)*6*r:r<.5?e:r<2/3?t+(e-t)*(2/3-r)*6:t;if(0==(e/=100))o=a=c=r;else{let l=r<.5?r*(1+e):r+e-r*e,i=2*r-l;o=n(i,l,t+1/3),a=n(i,l,t),c=n(i,l,t-1/3)}return{r:Math.round(255*o),g:Math.round(255*a),b:Math.round(255*c)}}let l=[{id:"system",name:"Системная",color:"#64748b",cssVars:{}},{id:"dark",name:"Темная",color:"#1e293b",cssVars:{"--background":"#0f0f0f","--foreground":"#ffffff","--primary":"#ffffff","--accent":"#1f2937"}},{id:"light",name:"Светлая",color:"#fbbf24",cssVars:{"--background":"#ffffff","--foreground":"#000000","--primary":"#000000","--accent":"#f3f4f6"}},{id:"track",name:"Под трек",color:"#ef4444",cssVars:{},isDynamic:!0}],i=(0,a.createContext)(void 0);function s(t){let{children:e}=t,{theme:r,setTheme:s,systemTheme:u}=(0,c.D)(),[d,h]=(0,a.useState)("system"),[g,m]=(0,a.useState)(!1),[f,y]=(0,a.useState)(()=>localStorage.getItem("customBackground")||null),[v,k]=(0,a.useState)(()=>parseInt(localStorage.getItem("backgroundBlur")||"0")),[p,S]=(0,a.useState)(()=>parseInt(localStorage.getItem("backgroundDarkness")||"50"));(0,a.useEffect)(()=>{f?(console.log("Saving custom background to localStorage:",f),localStorage.setItem("customBackground",f)):(console.log("Removing custom background from localStorage"),localStorage.removeItem("customBackground"))},[f]),(0,a.useEffect)(()=>{localStorage.setItem("backgroundBlur",v.toString())},[v]),(0,a.useEffect)(()=>{localStorage.setItem("backgroundDarkness",p.toString())},[p]);let w=t=>{let e=l.find(e=>e.id===t);e&&(console.log("ThemeProvider: applying theme:",t,"with CSS vars:",e.cssVars),["--background","--foreground","--primary","--accent"].forEach(t=>{document.documentElement.style.removeProperty(t)}),e.cssVars&&Object.keys(e.cssVars).length>0?Object.entries(e.cssVars).forEach(t=>{let[e,r]=t;document.documentElement.style.setProperty(e,r),console.log("ThemeProvider: set CSS var:",e,"=",r)}):console.log("ThemeProvider: no CSS vars for theme",t,", variables cleared"))},b=()=>{console.log("ThemeProvider: clearTrackTheme called, removing track theme CSS variables"),["--background","--foreground","--primary","--accent"].forEach(t=>{document.documentElement.style.removeProperty(t),console.log("ThemeProvider: removed CSS variable:",t)});let t=document.documentElement.style;t.background&&t.removeProperty("background"),t.color&&t.removeProperty("color"),document.documentElement.getAttribute("style")||document.documentElement.removeAttribute("style"),m(!1)};return(0,a.useEffect)(()=>{let t="system"===r?u:r;console.log("ThemeProvider: applying theme:",t,"currentTheme was:",d),h(t),"track"!==t&&(b(),w(t))},[r,u]),(0,o.jsx)(i.Provider,{value:{theme:d,currentTheme:d,toggleTheme:()=>{s("dark"===d?"light":"dark")},setThemeMode:t=>{console.log("ThemeProvider: setThemeMode called with:",t,"current theme:",r),"track"===d&&"track"!==t&&(console.log("ThemeProvider: clearing track theme before applying new theme"),b()),"track"===t?(s(t),h(t),console.log("ThemeProvider: track theme selected, waiting for track cover art")):(s(t),h(t),setTimeout(()=>{w(t),console.log("ThemeProvider: static theme applied:",t)},10))},setTrackTheme:t=>{if(console.log("ThemeProvider: setTrackTheme called with:",t,"currentTheme:",d),t&&"track"===d){let e=new Image;e.crossOrigin="anonymous",e.onload=()=>{let t=document.createElement("canvas"),r=t.getContext("2d");if(!r)return;let o=Math.min(200/e.width,200/e.height);t.width=e.width*o,t.height=e.height*o,r.drawImage(e,0,0,t.width,t.height);try{let e=r.getImageData(0,0,t.width,t.height).data,o=[];for(let t=0;t<e.length;t+=16){let r=e[t],a=e[t+1],c=e[t+2],n=.299*r+.587*a+.114*c;o.push({r,g:a,b:c,brightness:n})}o.sort((t,e)=>t.brightness-e.brightness);let a=Math.floor(.2*o.length),c=Math.floor(.8*o.length),l=o.slice(a,c);if(0===l.length){console.warn("No valid colors found");return}let i=Math.round(l.reduce((t,e)=>t+e.r,0)/l.length),s=Math.round(l.reduce((t,e)=>t+e.g,0)/l.length),u=Math.round(l.reduce((t,e)=>t+e.b,0)/l.length),d=function(t,e,r){let o=Math.max(t/=255,e/=255,r/=255),a=Math.min(t,e,r),c=0,n=0,l=(o+a)/2;if(o!==a){let i=o-a;switch(n=l>.5?i/(2-o-a):i/(o+a),o){case t:c=(e-r)/i+6*(e<r);break;case e:c=(r-t)/i+2;break;case r:c=(t-e)/i+4}c/=6}return{h:360*c,s:100*n,l:100*l}}(i,s,u),h={h:d.h,s:Math.min(100,d.s+20),l:Math.max(20,Math.min(80,d.l))},g=n(h.h,h.s,h.l),f={h:d.h,s:Math.max(30,d.s-30),l:Math.max(5,Math.min(25,d.l-20))},y=n(f.h,f.s,f.l),v=f.l>50?10:95,k=n(f.h,f.s,v),p={h:d.h,s:Math.min(100,d.s+10),l:Math.min(90,d.l+30)},S=n(p.h,p.s,p.l),w="rgb(".concat(y.r,", ").concat(y.g,", ").concat(y.b,")"),b="rgb(".concat(k.r,", ").concat(k.g,", ").concat(k.b,")"),T="rgb(".concat(g.r,", ").concat(g.g,", ").concat(g.b,")"),P="rgb(".concat(S.r,", ").concat(S.g,", ").concat(S.b,")");console.log("ThemeProvider: applying enhanced colors from cover art:",{bgColor:w,fgColor:b,primaryColor:T,accentColor:P}),document.documentElement.style.setProperty("--background",w),document.documentElement.style.setProperty("--foreground",b),document.documentElement.style.setProperty("--primary",T),document.documentElement.style.setProperty("--accent",P),m(!0)}catch(t){console.warn("ThemeProvider: Не удалось проанализировать обложку трека:",t)}},e.src=t}},clearTrackTheme:b,getCurrentThemeInfo:()=>l.find(t=>t.id===d)||l[0],themes:l,isDark:"dark"===d,isLight:"light"===d,isTrackTheme:"track"===d&&g,customBackground:f,setCustomBackground:y,backgroundBlur:v,setBackgroundBlur:k,backgroundDarkness:p,setBackgroundDarkness:S},children:e})}function u(){let t=(0,a.useContext)(i);if(void 0===t)throw Error("useTheme must be used within a ThemeProvider");return t}},66196:(t,e,r)=>{r.d(e,{Q:()=>C});let o="https://media.dotify.fun/api",a=["yNSW5UvBmb1A5j7qPUtIMuB9Itx3jsOC","KKzJxmw11tYpCs6T24P4uUYhqmjalG6M"];function c(){return a[Math.floor(Math.random()*a.length)]}async function n(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:20;arguments.length>2&&arguments[2];try{let r=new URL("".concat(o,"/search/soundcloud"));r.searchParams.append("query",t),r.searchParams.append("limit",e.toString());let a={Authorization:c()},n=await fetch(r.toString(),{headers:a});if(!n.ok)throw Error("HTTP error! status: ".concat(n.status));return(await n.json()).map(t=>({id:t.id,title:t.title,artist:t.artist,duration:t.duration,durationString:d(t.duration),source:"soundcloud",coverArt:t.coverArt,url:t.url,streamable:t.streamable||!1,originalId:t.originalId||t.id}))}catch(t){return console.error("Error searching SoundCloud tracks:",t),[]}}async function l(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:20;arguments.length>2&&arguments[2];try{let r=new URL("".concat(o,"/search/soundcloud/playlists"));r.searchParams.append("query",t),r.searchParams.append("limit",e.toString());let a={Authorization:c()},n=await fetch(r.toString(),{headers:a});if(!n.ok)throw Error("HTTP error! status: ".concat(n.status));return(await n.json()).map(t=>({id:t.id,title:t.title,creator:t.creator,itemCount:t.itemCount,coverArt:t.coverArt,url:t.url}))}catch(t){return console.error("Error searching SoundCloud playlists:",t),[]}}async function i(t,e){try{let e={Authorization:c()},r=await fetch("".concat(o,"/track/soundcloud/").concat(t),{headers:e});if(!r.ok)throw Error("HTTP error! status: ".concat(r.status));let a=await r.json();if(a.notAvailable)return{id:t,title:a.title||"Трек недоступен",artist:a.artist||"Недоступно",duration:0,durationString:"0:00",source:"soundcloud",coverArt:void 0,url:void 0,streamable:!1,originalId:t};return{id:a.id,title:a.title,artist:a.artist,duration:a.duration,durationString:d(a.duration),source:"soundcloud",coverArt:a.coverArt,url:a.url,streamable:a.streamable||!1,originalId:a.originalId||a.id}}catch(t){return console.error("Error getting SoundCloud track:",t),null}}async function s(t,e){try{let e=c(),r="".concat(o,"/stream/soundcloud/").concat(t,"?client_id=").concat(e),a=await fetch(r,{method:"GET",headers:{Authorization:e}});if(!a.ok)throw Error("HTTP error! status: ".concat(a.status));return(await a.json()).url||null}catch(t){return console.error("Error getting SoundCloud stream URL:",t),null}}async function u(t,e){try{let e={"Content-Type":"application/json",Authorization:c()},r=await fetch("".concat(o,"/import/soundcloud-playlist"),{method:"POST",headers:e,body:JSON.stringify({url:t})});if(!r.ok)throw Error("HTTP error! status: ".concat(r.status));return await r.json()}catch(t){return console.error("Error importing SoundCloud playlist:",t),{success:!1,error:t instanceof Error?t.message:"Unknown error"}}}function d(t){if(!t||"number"!=typeof t)return"0:00";let e=Math.floor(t/60);return"".concat(e,":").concat((t%60).toString().padStart(2,"0"))}let h="https://media.dotify.fun/api";async function g(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:20,r=arguments.length>2?arguments[2]:void 0,o=arguments.length>3?arguments[3]:void 0;try{let a={"Content-Type":"application/json"};r&&o&&(a.client_id=r,a.client_secret=o);let c=await fetch("".concat(h,"/search/spotify?q=").concat(encodeURIComponent(t),"&limit=").concat(e),{headers:a});if(!c.ok)throw Error("HTTP error! status: ".concat(c.status));return(await c.json()).map(t=>({id:t.id,title:t.title,artist:t.artist,duration:t.duration,durationString:function(t){if(!t||"number"!=typeof t)return"0:00";let e=Math.floor(t/1e3),r=Math.floor(e/60);return"".concat(r,":").concat((e%60).toString().padStart(2,"0"))}(t.duration),source:"spotify",coverArt:t.coverArt,url:t.url}))}catch(t){return console.error("Error searching Spotify tracks:",t),[]}}async function m(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:20,r=arguments.length>2?arguments[2]:void 0,o=arguments.length>3?arguments[3]:void 0;try{let a={"Content-Type":"application/json"};r&&o&&(a.client_id=r,a.client_secret=o);let c=await fetch("".concat(h,"/search/spotify/playlists?q=").concat(encodeURIComponent(t),"&limit=").concat(e),{headers:a});if(!c.ok)throw Error("HTTP error! status: ".concat(c.status));return(await c.json()).map(t=>({id:t.id,title:t.title,creator:t.creator,itemCount:t.itemCount,coverArt:t.coverArt,url:t.url}))}catch(t){return console.error("Error searching Spotify playlists:",t),[]}}async function f(t,e,r){try{let o={"Content-Type":"application/json"};e&&r&&(o.client_id=e,o.client_secret=r);let a=await fetch("".concat(h,"/track/spotify/").concat(t),{headers:o});if(!a.ok)throw Error("HTTP error! status: ".concat(a.status));return await a.json()}catch(t){return console.error("Error getting Spotify track details:",t),null}}async function y(t,e,r,o){try{let a={};e&&r&&(a.client_id=e,a.client_secret=r),o&&(a.soundcloud_token=o);let c=await fetch("".concat(h,"/stream/spotify/").concat(t),{headers:a});if(!c.ok)throw Error("HTTP error! status: ".concat(c.status));return await c.json()}catch(t){return console.error("Error getting Spotify stream:",t),null}}async function v(t,e,r){try{let o={"Content-Type":"application/json"};e&&r&&(o.client_id=e,o.client_secret=r);let a=await fetch("".concat(h,"/import/spotify-playlist"),{method:"POST",headers:o,body:JSON.stringify({playlistId:t})});if(!a.ok)throw Error("HTTP error! status: ".concat(a.status));return await a.json()}catch(t){return console.error("Error importing Spotify playlist:",t),{success:!1,error:t instanceof Error?t.message:"Unknown error"}}}let k="https://media.dotify.fun/api";async function p(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:20,r=arguments.length>2?arguments[2]:void 0;try{let o=await fetch("".concat(k,"/search/vk?query=").concat(encodeURIComponent(t),"&limit=").concat(e),{headers:{Authorization:"Bearer ".concat(r)}});if(!o.ok)throw Error("HTTP error! status: ".concat(o.status));return(await o.json()).map(t=>({id:t.id,title:t.title,artist:t.artist,duration:t.duration,durationString:function(t){if(!t||"number"!=typeof t)return"0:00";let e=Math.floor(t/60);return"".concat(e,":").concat((t%60).toString().padStart(2,"0"))}(t.duration),source:"vk",coverArt:t.coverArt,url:t.url}))}catch(t){return console.error("Error searching VK tracks:",t),[]}}async function S(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:20,r=arguments.length>2?arguments[2]:void 0;try{let o=await fetch("".concat(k,"/search/vk/playlists?query=").concat(encodeURIComponent(t),"&limit=").concat(e),{headers:{Authorization:"Bearer ".concat(r)}});if(!o.ok)throw Error("HTTP error! status: ".concat(o.status));return(await o.json()).map(t=>({id:t.id,title:t.title,creator:t.creator,itemCount:t.itemCount,coverArt:t.coverArt,url:t.url}))}catch(t){return console.error("Error searching VK playlists:",t),[]}}async function w(t,e){try{let r=await fetch("".concat(k,"/stream/vk/").concat(t),{headers:{Authorization:"Bearer ".concat(e)}});if(!r.ok)throw Error("HTTP error! status: ".concat(r.status));return(await r.json()).url||null}catch(t){return console.error("Error getting VK stream URL:",t),null}}async function b(t,e){let r=arguments.length>2&&void 0!==arguments[2]&&arguments[2];try{let o=await fetch("".concat(k,"/import/vk-playlist?play_only=").concat(r),{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(e)},body:JSON.stringify({url:t})});if(!o.ok)throw Error("HTTP error! status: ".concat(o.status));return await o.json()}catch(t){return console.error("Error importing VK playlist:",t),{success:!1,error:t instanceof Error?t.message:"Unknown error"}}}async function T(t,e){try{let r=await fetch("".concat(k,"/track/vk/").concat(t),{headers:{Authorization:"Bearer ".concat(e)}});if(!r.ok)throw Error("HTTP error! status: ".concat(r.status));return await r.json()}catch(t){return console.error("Error getting VK track details:",t),null}}class P{async searchTracks(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:20,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"soundcloud",o=arguments.length>3?arguments[3]:void 0;try{let a=[];switch(r){case"soundcloud":default:a=await n(t,e,o);break;case"spotify":a=await g(t,e,null==o?void 0:o.split(":")[0],null==o?void 0:o.split(":")[1]);break;case"vk":if(!o)throw Error("VK requires token");a=await p(t,e,o)}return a.map(t=>{let e="0:00";if(t.duration){if("number"==typeof t.duration){let r=Math.floor(t.duration/60),o=t.duration%60;e="".concat(r,":").concat(o<10?"0":"").concat(o)}else t.durationString?e=t.durationString:"string"==typeof t.duration&&(e=t.duration)}else if(t.duration_ms){let r=Math.floor(t.duration_ms/1e3),o=Math.floor(r/60),a=r%60;e="".concat(o,":").concat(a<10?"0":"").concat(a)}return{id:t.id,title:t.title,artist:t.artist,duration:e,durationString:e,source:r,streamable:!1!==t.streamable,coverArt:t.coverArt,originalId:t.originalId||t.id,liked:!1,url:t.url}})}catch(t){return console.error("Error searching tracks on ".concat(r,":"),t),[]}}async searchPlaylists(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:20,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"soundcloud",o=arguments.length>3?arguments[3]:void 0;console.log("[MediaService] searchPlaylists called with:",{query:t,limit:e,platform:r,token:o});try{let a=[];switch(r){case"soundcloud":default:a=await l(t,e,o);break;case"spotify":a=await m(t,e,null==o?void 0:o.split(":")[0],null==o?void 0:o.split(":")[1]);break;case"vk":if(!o)throw Error("VK requires token");a=await S(t,e,o)}return console.log("[MediaService] Raw results from ".concat(r,":"),a),a.forEach((t,e)=>{console.log("[MediaService] Playlist ".concat(e,":"),{id:t.id,title:t.title,artist:t.artist||t.creator,itemCount:t.itemCount,track_count:t.track_count,tracksCount:t.tracksCount,tracks_count:t.tracks_count,count:t.count,trackCount:t.trackCount,allKeys:Object.keys(t)})}),a.map(t=>{var e,o,a;let c;return void 0!==t.itemCount&&null!==t.itemCount?c=t.itemCount:void 0!==t.track_count&&null!==t.track_count?c=t.track_count:void 0!==t.tracksCount&&null!==t.tracksCount&&"?"!==t.tracksCount?c=t.tracksCount:void 0!==t.tracks_count&&null!==t.tracks_count?c=t.tracks_count:void 0!==t.count&&null!==t.count?c=t.count:void 0!==t.trackCount&&null!==t.trackCount?c=t.trackCount:t.tracks&&Array.isArray(t.tracks)?c=t.tracks.length:t.songs&&Array.isArray(t.songs)&&(c=t.songs.length),console.log("[MediaService] Playlist ".concat(t.title," (").concat(r,"):"),{itemCount:t.itemCount,track_count:t.track_count,tracksCount:t.tracksCount,tracks_count:t.tracks_count,count:t.count,trackCount:t.trackCount,tracks:null===(e=t.tracks)||void 0===e?void 0:e.length,songs:null===(o=t.songs)||void 0===o?void 0:o.length,finalTrackCount:c||"undefined",rawPlaylist:t}),{id:t.id,title:t.title,artist:t.creator||(null===(a=t.user)||void 0===a?void 0:a.username)||t.owner||"Unknown",trackCount:c,duration:"0:00",coverUrl:t.coverArt||null,coverArt:t.coverArt||null,tracks:t.tracks||t.songs||[],platform:r}})}catch(t){return console.error("Error searching playlists on ".concat(r,":"),t),[]}}async getStreamUrl(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"soundcloud",r=arguments.length>2?arguments[2]:void 0,o="stream_url_".concat(e,"_").concat(t);if(this.cache.has(o)){let t=this.cache.get(o);if(Date.now()-t.timestamp<this.cacheTimeout)return t.data}try{let a=null;switch(e){case"soundcloud":console.log("[MediaService] Calling getSoundCloudStreamUrl with token: ".concat(r?"present":"missing")),a=await s(t,r);break;case"spotify":let c=await y(t,null==r?void 0:r.split(":")[0],null==r?void 0:r.split(":")[1]);a=(null==c?void 0:c.url)||null;break;case"vk":if(!r)throw Error("VK requires token");a=await w(t,r);break;default:a=await s(t,r)}return a&&this.cache.set(o,{data:a,timestamp:Date.now()}),a}catch(t){return console.error("Error getting stream URL on ".concat(e,":"),t),null}}async getTrackInfo(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"soundcloud",r=arguments.length>2?arguments[2]:void 0,o="track_info_".concat(e,"_").concat(t);if(this.cache.has(o)){let t=this.cache.get(o);if(Date.now()-t.timestamp<this.cacheTimeout)return t.data}try{let a=null;switch(e){case"soundcloud":default:a=await i(t,r);break;case"spotify":a=await f(t,null==r?void 0:r.split(":")[0],null==r?void 0:r.split(":")[1]);break;case"vk":if(!r)throw Error("VK requires token");a=await T(t,r)}if(!a)return null;let c={id:a.id,title:a.title,artist:a.artist,duration:a.durationString||a.duration,durationString:a.durationString||a.duration,source:e,streamable:!1!==a.streamable,originalId:a.originalId||a.id,coverArt:a.coverArt,liked:!1,url:a.url};return this.cache.set(o,{data:c,timestamp:Date.now()}),c}catch(t){return console.error("Error getting track info on ".concat(e,":"),t),null}}async search(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:20,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"soundcloud",o=arguments.length>3?arguments[3]:void 0;try{console.log("[MediaService] search() called with:",{query:t,limit:e,platform:r,token:o});let[a,c]=await Promise.all([this.searchTracks(t,e,r,o),this.searchPlaylists(t,Math.min(e,10),r,o)]);return console.log("[MediaService] Search results on ".concat(r,":"),{tracks:a.length,playlists:c.length}),console.log("[MediaService] Playlists details:",c),{tracks:a,playlists:c}}catch(t){return console.error("[MediaService] Error in universal search on ".concat(r,":"),t),{tracks:[],playlists:[]}}}formatDuration(t){let e=Math.floor(t/1e3),r=Math.floor(e/60);return"".concat(r,":").concat((e%60).toString().padStart(2,"0"))}calculateTotalDuration(t){let e=t.reduce((t,e)=>{if("number"==typeof e.duration)return t+e.duration;if("string"==typeof e.duration&&e.duration.includes(":")){let[r,o]=e.duration.split(":").map(Number);return t+60*r+o}return t},0),r=Math.floor(e/60);return"".concat(r,":").concat((e%60).toString().padStart(2,"0"))}async importPlaylist(t,e,r){try{var o;let a;switch(console.log("MediaService: Starting playlist import for:",t,"platform:",e),e||(e=t.includes("soundcloud.com")?"soundcloud":t.includes("youtube.com")||t.includes("youtu.be")?"youtube":t.includes("open.spotify.com")?"spotify":t.includes("vk.com")?"vk":t.includes("music.yandex.ru")?"yandex":"soundcloud"),e){case"soundcloud":default:a=await u(t,r);break;case"spotify":let c=t.match(/playlist\/([a-zA-Z0-9]+)/);if(c)a=await v(c[1],null==r?void 0:r.split(":")[0],null==r?void 0:r.split(":")[1]);else throw Error("Invalid Spotify playlist URL");break;case"vk":if(!r)throw Error("VK requires token");a=await b(t,r)}if(console.log("MediaService: Import result:",a),!a.success)return console.log("MediaService: Import failed:",a.error),a;console.log("Import playlist result:",a),console.log("Playlist songs:",a.playlist.songs);let n={id:a.playlist.id,title:a.playlist.name||a.playlist.title,artist:a.playlist.author||a.playlist.creator||"Unknown",trackCount:a.playlist.count||(null===(o=a.playlist.songs)||void 0===o?void 0:o.length)||0,duration:this.calculateTotalDuration(a.playlist.songs),tracks:a.playlist.songs.map(t=>({id:t.id,title:t.title,artist:t.artist,duration:t.durationString||t.duration,durationString:t.durationString||t.duration,source:e,streamable:!1!==t.streamable,coverArt:t.coverArt,originalId:t.originalId||t.id,url:t.url,liked:!1})),coverArt:a.playlist.cover||a.playlist.coverArt};return console.log("Final playlist:",n),{success:!0,playlist:n}}catch(t){return console.error("Error importing playlist:",t),{success:!1,error:t instanceof Error?t.message:"Unknown error"}}}async downloadTrack(t,e){try{console.log("Начинаем скачивание трека:",t.title,"от",t.artist);let r=await this.getStreamUrl(t.originalId||t.id,t.source,e);if(!r)throw Error("Не удалось получить URL для скачивания");console.log("Получили stream URL для скачивания:",r);let o=await fetch(r);if(!o.ok)throw Error("HTTP error! status: ".concat(o.status));let a=await o.blob(),c=window.URL.createObjectURL(a),n=document.createElement("a");n.href=c;let l="".concat(t.artist," - ").concat(t.title,".mp3").replace(/[^\w\s.-]/gi,"").replace(/\s+/g," ").trim();n.download=l,document.body.appendChild(n),n.click(),document.body.removeChild(n),window.URL.revokeObjectURL(c),console.log("Трек успешно скачан:",l)}catch(t){throw console.error("Ошибка при скачивании трека:",t),t}}async checkTokenValidity(t,e){try{console.log("[MediaService] Проверка токена для сервиса: ".concat(t));let r=new URL("/api/check-token/".concat(t),"https://media.dotify.fun");if("spotify"===t){let[t,o]=e.split(":");r.searchParams.set("clientId",t),r.searchParams.set("clientSecret",o)}let o=await fetch(r.toString(),{method:"GET",headers:{Authorization:"spotify"===t?"":e}});if(!o.ok)throw Error("HTTP error! status: ".concat(o.status));let a=await o.json();return console.log("[MediaService] Результат проверки токена для ".concat(t,":"),a),{isValid:!0===a.isValid,message:a.message||"Проверка выполнена"}}catch(r){let t=r instanceof Error?r.message:String(r),e=t;return t.includes("error sending request")?e="Ошибка подключения к серверу":t.includes("failed to fetch")?e="Не удалось подключиться к серверу":t.includes("network request failed")?e="Сетевая ошибка":(t.includes("anonymous")||t.includes("invalid token")||t.includes("unauthorized"))&&(e="Неверный токен или учетные данные"),{isValid:!1,message:e}}}async getSimilarTracks(t,e,r){try{console.log("[MediaService] getSimilarTracks called with query: ".concat(t,", platform: ").concat(e,", token: ").concat(r?"present":"missing"));let o=await this.searchTracks(t,20,e,r);return console.log("[MediaService] getSimilarTracks found ".concat(o.length," tracks")),o}catch(t){throw console.error("Error getting similar tracks:",t),t}}async generateWave(t,e,r){try{console.log("[MediaService] generateWave called with platform: ".concat(t,", seedTracks: ").concat(e.length,", token: ").concat(r?"present":"missing"));let o={"Content-Type":"application/json"};r&&(o.Authorization=r);let a={source:t,seed_tracks:e};console.log("[MediaService] Request body:",a),console.log("[MediaService] Headers:",o);let c=await fetch("https://media.dotify.fun/api/wave",{method:"POST",headers:o,body:JSON.stringify(a)});if(console.log("[MediaService] Response status: ".concat(c.status)),!c.ok){let t=await c.text();throw console.error("[MediaService] Error response:",t),Error("HTTP error! status: ".concat(c.status,": ").concat(t))}let n=await c.json();return console.log("[MediaService] Response data:",n),console.log("[MediaService] data.data:",n.data),n.data||[]}catch(t){throw console.error("Error generating wave:",t),t}}clearCache(){this.cache.clear()}constructor(){this.cache=new Map,this.cacheTimeout=3e5}}let C=new P},78952:(t,e,r)=>{r.d(e,{$:()=>s,t:()=>u});var o=r(95155),a=r(12115);let c={FAVORITES:"dotify_favorites",PLAYLISTS:"dotify_playlists",RECENT_TRACKS:"dotify_recent_tracks"};class n{getFavorites(){let t=localStorage.getItem(c.FAVORITES);if(!t)return[];try{let e=JSON.parse(t);return Array.isArray(e)?e:[]}catch(t){return[]}}addToFavorites(t){let e=this.getFavorites();if(!e.find(e=>e.id===t.id)){let r={...t,addedAt:Date.now()};e.unshift(r),this.saveFavorites(e)}}removeFromFavorites(t){let e=this.getFavorites().filter(e=>e.id!==t);this.saveFavorites(e)}isFavorite(t){return this.getFavorites().some(e=>e.id===t)}saveFavorites(t){localStorage.setItem(c.FAVORITES,JSON.stringify(t))}getPlaylists(){let t=localStorage.getItem(c.PLAYLISTS);if(!t)return[];try{let e=JSON.parse(t);return Array.isArray(e)?e:[]}catch(t){return[]}}addPlaylist(t){let e=this.getPlaylists();if(!e.find(e=>e.id===t.id)){let r={...t,addedAt:Date.now()};e.unshift(r),this.savePlaylists(e)}}updatePlaylist(t,e){let r=this.getPlaylists(),o=r.findIndex(e=>e.id===t);-1!==o&&(r[o]={...r[o],...e},this.savePlaylists(r))}removePlaylist(t){let e=this.getPlaylists().filter(e=>e.id!==t);this.savePlaylists(e)}markPlaylistAsPlayed(t){let e=this.getPlaylists(),r=e.find(e=>e.id===t);r&&(r.lastPlayed=Date.now(),this.savePlaylists(e))}savePlaylists(t){localStorage.setItem(c.PLAYLISTS,JSON.stringify(t))}getRecentTracks(){let t=localStorage.getItem(c.RECENT_TRACKS);if(!t)return[];try{let e=JSON.parse(t);return Array.isArray(e)?e:[]}catch(t){return[]}}addRecentTrack(t){let e=this.getRecentTracks(),r=e.findIndex(e=>e.id===t.id);if(-1!==r){e[r].playedAt=Date.now(),e[r].playCount+=1;let t=e.splice(r,1)[0];e.unshift(t)}else{let r={...t,playedAt:Date.now(),playCount:1};e.unshift(r)}e.length>50&&e.splice(50),this.saveRecentTracks(e)}clearRecentTracks(){localStorage.removeItem(c.RECENT_TRACKS)}saveRecentTracks(t){localStorage.setItem(c.RECENT_TRACKS,JSON.stringify(t))}clearAllCache(){Object.values(c).forEach(t=>{localStorage.removeItem(t)})}getCacheSize(){let t=0;return Object.values(c).forEach(e=>{let r=localStorage.getItem(e);r&&(t+=new Blob([r]).size)}),t}exportCache(){return{favorites:this.getFavorites(),playlists:this.getPlaylists(),recent:this.getRecentTracks()}}importCache(t){t.favorites&&this.saveFavorites(t.favorites),t.playlists&&this.savePlaylists(t.playlists),t.recent&&this.saveRecentTracks(t.recent)}}let l=new n,i=(0,a.createContext)(void 0);function s(t){let{children:e}=t,[r,c]=(0,a.useState)([]),[n,s]=(0,a.useState)([]),[u,d]=(0,a.useState)([]),[h,g]=(0,a.useState)(!0);(0,a.useEffect)(()=>{(()=>{console.log("LibraryProvider: Loading data from cache");let t=l.getFavorites(),e=l.getPlaylists(),r=l.getRecentTracks();c(t),s(e),d(r),g(!1),console.log("LibraryProvider: Data loaded",{favorites:t.length,playlists:e.length,recentTracks:r.length})})()},[]);let m=(0,a.useCallback)(t=>{console.log("LibraryProvider: Adding to favorites:",t.title),l.addToFavorites(t);let e=l.getFavorites();c(e),console.log("LibraryProvider: Favorites updated, count:",e.length)},[]),f=(0,a.useCallback)(t=>{console.log("LibraryProvider: Removing from favorites:",t),l.removeFromFavorites(t);let e=l.getFavorites();c(e),console.log("LibraryProvider: Favorites updated, count:",e.length)},[]),y=(0,a.useCallback)(t=>{let e="string"==typeof t?t:t.id;if(l.isFavorite(e))return f(e),!1;if("object"==typeof t)m(t);else{let t=u.find(t=>t.id===e);if(!t)for(let o of n){var r;if(t=null===(r=o.tracks)||void 0===r?void 0:r.find(t=>t.id===e))break}t&&m(t)}return!0},[u,n,m,f]),v=(0,a.useCallback)(t=>l.isFavorite(t),[]),k=t=>{let e=t.reduce((t,e)=>"number"==typeof e.duration?t+e.duration:t,0),r=Math.floor(e/3600),o=Math.floor(e%3600/60);return r>0?"".concat(r," ч ").concat(o," мин"):"".concat(o," мин")},p=(0,a.useCallback)(t=>{console.log("LibraryProvider: Adding playlist:",t.title),l.addPlaylist(t);let e=l.getPlaylists();s(e),console.log("LibraryProvider: Playlists updated, count:",e.length)},[]),S=(0,a.useCallback)(t=>{console.log("LibraryProvider: Removing playlist:",t),l.removePlaylist(t);let e=l.getPlaylists();s(e),console.log("LibraryProvider: Playlists updated, count:",e.length)},[]),w=(0,a.useCallback)((t,e)=>{console.log("LibraryProvider: Updating playlist:",t,"with:",e),l.updatePlaylist(t,e);let r=l.getPlaylists();s(r),console.log("LibraryProvider: Playlists updated, count:",r.length)},[]),b=(0,a.useCallback)(t=>{console.log("LibraryProvider: Marking playlist as played:",t),l.markPlaylistAsPlayed(t),s(l.getPlaylists())},[]),T=(0,a.useCallback)((t,e)=>{console.log("LibraryProvider: Adding track to playlist:",e.title,"to",t);let r=n.find(e=>e.id===t);if(r){let o=[...r.tracks||[],e];w(t,{tracks:o,trackCount:o.length,duration:k(o)})}},[n,w]),P=(0,a.useCallback)((t,e)=>{console.log("LibraryProvider: Removing track from playlist:",e,"from",t);let r=n.find(e=>e.id===t);if(r&&r.tracks){let o=r.tracks.filter(t=>t.id!==e);w(t,{tracks:o,trackCount:o.length,duration:k(o)})}},[n,w]),C=(0,a.useCallback)((t,e,r)=>{console.log("LibraryProvider: Moving track in playlist:",t,"from",e,"to",r);let o=n.find(e=>e.id===t);if(o&&o.tracks){let a=[...o.tracks],[c]=a.splice(e,1);a.splice(r,0,c),w(t,{tracks:a})}},[n,w]),E=(0,a.useCallback)(t=>{console.log("LibraryProvider: Adding recent track:",t.title),l.addRecentTrack(t),d(l.getRecentTracks())},[]),I=(0,a.useCallback)(()=>{console.log("LibraryProvider: Clearing recent tracks"),l.clearRecentTracks(),d([])},[]),A=(0,a.useCallback)(()=>{console.log("LibraryProvider: Clearing all cache"),l.clearAllCache(),c([]),s([]),d([])},[]),M=(0,a.useCallback)(()=>(console.log("LibraryProvider: Exporting data"),l.exportCache()),[]),_=(0,a.useCallback)(t=>{console.log("LibraryProvider: Importing data:",t),l.importCache(t);let e=l.getFavorites(),r=l.getPlaylists(),o=l.getRecentTracks();c(e),s(r),d(o),console.log("LibraryProvider: Data imported and state updated")},[]),R=(0,a.useCallback)(()=>l.getCacheSize(),[]),L=(0,a.useCallback)(()=>({favoritesCount:r.length,playlistsCount:n.length,recentTracksCount:u.length,totalTracks:r.length+n.reduce((t,e)=>{var r;return t+((null===(r=e.tracks)||void 0===r?void 0:r.length)||0)},0),cacheSize:R()}),[r.length,n,u.length,R]);return(0,o.jsx)(i.Provider,{value:{favorites:r,playlists:n,recentTracks:u,isLoading:h,addToFavorites:m,removeFromFavorites:f,toggleFavorite:y,isFavorite:v,addPlaylist:p,removePlaylist:S,updatePlaylist:w,markPlaylistAsPlayed:b,addTrackToPlaylist:T,removeTrackFromPlaylist:P,moveTrackInPlaylist:C,addRecentTrack:E,clearRecentTracks:I,clearAllCache:A,exportData:M,importData:_,getCacheSize:R,getStats:L},children:e})}function u(){let t=(0,a.useContext)(i);if(void 0===t)throw Error("useLibrary must be used within a LibraryProvider");return t}},79600:(t,e,r)=>{r.d(e,{Z:()=>i,t:()=>s});var o=r(95155),a=r(12115),c=r(32900),n=r(66196);let l=(0,a.createContext)(void 0);function i(t){let{children:e}=t,[r,i]=(0,a.useState)(()=>localStorage.getItem("theme")||"system"),[s,u]=(0,a.useState)(()=>"true"===localStorage.getItem("autoPlay")),[d,h]=(0,a.useState)(()=>"true"===localStorage.getItem("cacheTracks")),[g,m]=(0,a.useState)(()=>parseInt(localStorage.getItem("cacheSize")||"0")),[f,y]=(0,a.useState)(()=>"false"!==localStorage.getItem("showMiniPlayer")),[v,k]=(0,a.useState)(()=>"false"!==localStorage.getItem("showNotifications")),[p,S]=(0,a.useState)(()=>parseInt(localStorage.getItem("maxCacheSize")||"2048")),[w,b]=(0,a.useState)(()=>parseInt(localStorage.getItem("clearCacheOlderThan")||"30")),[T,P]=(0,a.useState)(""),[C,E]=(0,a.useState)(""),[I,A]=(0,a.useState)(""),[M,_]=(0,a.useState)(""),[R,L]=(0,a.useState)(()=>{{let t=localStorage.getItem(c.d5.soundcloud);if(t)return t;let e="yNSW5UvBmb1A5j7qPUtIMuB9Itx3jsOC";return localStorage.setItem(c.d5.soundcloud,e),e}}),[j,O]=(0,a.useState)(()=>localStorage.getItem(c.d5.spotify_clientId)||""),[V,U]=(0,a.useState)(()=>localStorage.getItem(c.d5.spotify_clientSecret)||""),[z,x]=(0,a.useState)(()=>localStorage.getItem(c.d5.vk)||"");(0,a.useEffect)(()=>{localStorage.setItem("theme",r)},[r]),(0,a.useEffect)(()=>{localStorage.setItem("autoPlay",s.toString())},[s]),(0,a.useEffect)(()=>{localStorage.setItem("cacheTracks",d.toString())},[d]),(0,a.useEffect)(()=>{localStorage.setItem("cacheSize",g.toString())},[g]),(0,a.useEffect)(()=>{localStorage.setItem("showMiniPlayer",f.toString())},[f]),(0,a.useEffect)(()=>{localStorage.setItem("showNotifications",v.toString())},[v]),(0,a.useEffect)(()=>{localStorage.setItem("maxCacheSize",p.toString())},[p]),(0,a.useEffect)(()=>{localStorage.setItem("clearCacheOlderThan",w.toString())},[w]),(0,a.useEffect)(()=>{localStorage.setItem(c.d5.soundcloud,R)},[R]),(0,a.useEffect)(()=>{localStorage.setItem(c.d5.spotify_clientId,j)},[j]),(0,a.useEffect)(()=>{localStorage.setItem(c.d5.spotify_clientSecret,V)},[V]),(0,a.useEffect)(()=>{localStorage.setItem(c.d5.vk,z)},[z]);let F=async(t,e)=>{try{return await n.Q.checkTokenValidity(t,e)}catch(t){return{isValid:!1,message:(null==t?void 0:t.message)||"Ошибка проверки токена"}}};return(0,o.jsx)(l.Provider,{value:{theme:r,autoPlay:s,cacheTracks:d,cacheSize:g,showMiniPlayer:f,showNotifications:v,maxCacheSize:p,clearCacheOlderThan:w,soundcloudToken:T,spotifyClientId:C,spotifyClientSecret:I,vkToken:M,validSoundcloudToken:R,validSpotifyClientId:j,validSpotifyClientSecret:V,validVkToken:z,setTheme:i,setAutoPlay:u,setCacheTracks:h,setCacheSize:m,setShowMiniPlayer:y,setShowNotifications:k,setMaxCacheSize:S,setClearCacheOlderThan:b,setSoundcloudToken:P,setSpotifyClientId:E,setSpotifyClientSecret:A,setVkToken:_,getServiceToken:t=>{switch(t){case"soundcloud":return R||void 0;case"spotify":return j||void 0;case"vk":return z||void 0;default:return}},checkServiceToken:F,saveValidSoundcloudToken:t=>{L(t)},saveValidSpotifyTokens:(t,e)=>{O(t),U(e)},saveValidVkToken:t=>{x(t)},clearValidSoundcloudToken:()=>{L("")},clearValidSpotifyTokens:()=>{O(""),U("")},clearValidVkToken:()=>{x("")},clearAllCache:()=>{{let t=["autoPlay","cacheTracks","cacheSize","showMiniPlayer","showNotifications","maxCacheSize","clearCacheOlderThan","theme","customBackground","backgroundBlur","backgroundDarkness"];Object.keys(localStorage).forEach(e=>{t.includes(e)||localStorage.removeItem(e)}),m(0)}},clearCacheByType:t=>{Object.keys(localStorage).filter(e=>e.includes(t.toLowerCase())).forEach(t=>{localStorage.removeItem(t)}),m(Object.keys(localStorage).filter(t=>!["autoPlay","cacheTracks","cacheSize","showMiniPlayer","showNotifications","maxCacheSize","clearCacheOlderThan","theme","customBackground","backgroundBlur","backgroundDarkness"].includes(t)).reduce((t,e)=>{let r=localStorage.getItem(e);return t+(r?new Blob([r]).size:0)},0))},getCacheInfo:()=>{{let t=Object.keys(localStorage),e=["autoPlay","cacheTracks","cacheSize","showMiniPlayer","showNotifications","maxCacheSize","clearCacheOlderThan","theme","customBackground","backgroundBlur","backgroundDarkness"],r=t.filter(t=>!e.includes(t)),o={favorites:0,playlists:0,recent:0,tracks:0,images:0,other:0},a=0;return r.forEach(t=>{let e=localStorage.getItem(t);if(e){let r=new Blob([e]).size;a+=r,t.includes("favorite")?o.favorites+=r:t.includes("playlist")?o.playlists+=r:t.includes("recent")?o.recent+=r:t.includes("track")?o.tracks+=r:t.includes("image")||t.includes("cover")?o.images+=r:o.other+=r}}),{total:a,byType:o}}}},children:e})}function s(){let t=(0,a.useContext)(l);if(void 0===t)throw Error("useSettings must be used within a SettingsProvider");return t}}}]);